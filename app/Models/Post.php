<?php

namespace App\Models;

use App\User;
use Illuminate\Database\Eloquent\Model;

/** @noinspection PhpUnnecessaryFullyQualifiedNameInspection */

/**
 * App\Models\Post
 *
 * @property int $id
 * @property string|null $content
 * @property int $has_media_content 0 => No, 1 => Yes
 * @property int $posted_by
 * @property int $is_hidden 0 => No, 1 => Yes
 * @property int $is_auto_generated 0 => No, 1 => Yes
 * @property int $is_edited 0 => No, 1 => Yes
 * @property int $is_approved 0 => No, 1 => Yes
 * @property \Carbon\Carbon|null $created_at
 * @property \Carbon\Carbon|null $updated_at
 * @property-read \App\User $postedBy
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\PostedMedia[] $posted_medias
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\PostedMedia[] $postedMedias
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereContent($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereHasMediaContent($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereIsApproved($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereIsAutoGenerated($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereIsEdited($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereIsHidden($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post wherePostedBy($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Post whereUpdatedAt($value)
 * @mixin \Eloquent
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Comment[] $comments
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Like[] $likes
 */
class Post extends Model
{
    /**
     * A post should posted by an user
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function postedBy()
    {
        return $this->belongsTo(User::class, 'posted_by', 'id');
    }

    /**
     * A post may has many included medias
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function postedMedias()
    {
        return $this->hasMany(PostedMedia::class, 'in_post', 'id');
    }

    /**
     * A post may has included image
     *
     * @return $this
     */
    public function postedImage()
    {
        return $this->postedMedias()->where('media_type', '=', 0)->first();
    }

    /**
     * A post may has included video
     *
     * @return $this
     */
    public function postedVideo()
    {
        return $this->postedMedias()->where('media_type', '=', 1)->first();
    }

    /**
     * A post may has many comments
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function comments()
    {
        return $this->hasMany(Comment::class, 'on_post', 'id');
    }

    /**
     * A post may has many likes
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function likes()
    {
        return $this->hasMany(Like::class, 'on_post', 'id');
    }
}
